<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <context:property-placeholder order="30" location="classpath:application.properties"/>

    <import resource="classpath:spring-mvc.xml"/>
    <!--视图解析器配置-->
    <import resource="classpath:view-resolve.xml"/>
    <!--service-->
    <import resource="classpath*:service-context.xml"/>

    <!--隐式的注册了
    它的作用是隐式的向Spring容器注册
                           AutowiredAnnotationBeanPostProcessor,
                           CommonAnnotationBeanPostProcessor,
                           PersistenceAnnotationBeanPostProcessor,
                           RequiredAnnotationBeanPostProcessor
                           这4个BeanPostProcessor.
    注册这4个bean处理器主要的作用是为了你的系统能够识别相应的注解。
    例如：
    如果想使用@Autowired注解，需要在Spring容器中声明AutowiredAnnotationBeanPostProcessor Bean。
    传统的声明方式：<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
        如果想使用@PersistenceContext注解，需要在Spring容器中声明PersistenceAnnotationBeanPostProcessor Bean。
    传统的声明：<bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"/>
        如果想使用@Required注解，需要在Spring容器中声明RequiredAnnotationBeanPostProcessor Bean。
    传统声明方式：<bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"/>
        如果想使用@Resource、@ PostConstruct、@ PreDestroy等注解就必须声明CommonAnnotationBeanPostProcessor。
    传统申明方式： <bean class="org.springframework.beans.factory.annotation.CommonAnnotationBeanPostProcessor"/>
    所以，如果按照传统声明一条一条去声明注解Bean，就会显得十分繁琐。
    因此如果在Spring的配置文件中事先加上<context:annotation-config/>这样一条配置的话，那么所有注解的传统声明就可以被  忽略，即不用在写传统的声明，Spring会自动完成声明。
    -->
    <!-- <context:annotation-config/>-->
    <!--
    <context:component-scan/>的作用是让Bean定义注解工作起来,也就是上述传统声明方式。
    它的base-package属性指定了需要扫描的类包，类包及其递归子包中所有的类都会被处理。
    值得注意的是<context:component-scan/>不但启用了对类包进行扫描以实施注释驱动 Bean 定义的功能，
    同时还启用了注释驱动自动注入的功能
    即还隐式地在内部注册了 AutowiredAnnotationBeanPostProcessor 和  CommonAnnotationBeanPostProcessor），
    因此当使用 <context:component-scan/> 后，就可以将 <context:annotation-config/> 移除了。
    -->

    <context:component-scan base-package="com.qxd"/>
</beans>